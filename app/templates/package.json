{
  "name": "<%= projectKebabName %>",
  "version": "0.1.0",
  "description": "<%= projectDescription %>",
  "scripts": {
    "scss": "mkdir -p dist/arquivos && node-sass --source-map true --output-style compressed -o dist/arquivos dev/scss",
    "autoprefixer": "postcss -u autoprefixer -r dist/arquivos/*.css",
    "lint": "eslint -c .eslintrc.js dev/js",
    "uglify": "mkdir -p dist/arquivos && uglifyjs prod/js/*.js -o dist/arquivos/<%= projectKebabName %>.js && uglifyjs dev/js/plugins/*.js -o dist/arquivos/<%= projectKebabName %>-vendors.js",
    "browserify": "mkdir -p prod/js && browserify dev/js/scripts.js -o prod/js/scripts.js -t [ babelify --presets [ es2015 stage-0 react ] ]",
    "imagemin": "mkdir -p dev/img && imagemin dev/img/* -o=dist/arquivos",
    "icons": "mkdir -p dev/svg && mkdir -p prod/svg && svgo -f dev/svg -o prod/svg",
    "jade": "jade dev/html/templates-de-pagina -P -o dist -O 'jade-local.json'",
    "jade-vtex": "jade dev/html/templates-de-pagina -P -o html-vtex/templates-de-pagina -O 'jade-vtex.json' && jade dev/html/sub-templates -P -o html-vtex/sub-templates -O 'jade-vtex.json' && jade dev/html/templates-de-prateleira -P -o html-vtex/templates-de-prateleira -O 'jade-vtex.json'",
    "serve": "browser-sync start --server --ss dist --files 'dist/*.html, dist/arquivos/*.css, dist/arquivos/*.js'",
    "build:css": "npm run scss && npm run autoprefixer",
    "build:js": "npm run browserify && npm run uglify",
    "build:html": "npm run jade && npm run jade-vtex",
    "build:img": "npm run imagemin && npm run icons",
    "build": "npm run build:img && npm run build:html && npm run build:css && npm run build:js",
    "watch:img": "onchange 'dev/{img,svg}/**/*.{jpg,png,gif,svg}' -- npm run build:img",
    "watch:css": "onchange 'dev/scss/**/*.scss' -- npm run build:css",
    "watch:js": "onchange 'dev/js/**/*.js' -- npm run build:js",
    "watch:html": "onchange 'dev/html/**/*.jade' -- npm run build:html",
    "watch": "parallelshell 'npm run serve' 'npm run watch:html' 'npm run watch:css' 'npm run watch:img' 'npm run watch:js'",
    "start": "npm run build && npm run watch",
    "postinstall": "npm run build && npm start"
  },
  "repository": {
    "type": "git",
    "url": "<%= projectRepository %>"
  },
  "author": {
    "name": "<%= projectAuthorName %>",
    "email": "<%= projectAuthorEmail %>"
  },
  "contributors": [
    {}
  ]
}
